%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 0.41.0 (http://poppler.freedesktop.org)
%%Creator: \050MATLAB, The Mathworks, Inc. Version 9.2.0.538062 \\(R2017a\\). Operating System: Linux)
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 432 347
%%HiResBoundingBox: 0 0 432 347
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font NQAYFR+Helvetica-Bold
%!FontType1-1.0: NQAYFR+Helvetica-Bold
12 dict begin
/FontInfo 10 dict dup begin
/Notice (Copyright \(URW\)++,Copyright 2014 by \(URW\)++ Design & Develo\
pment) readonly def
/FullName (Nimbus Sans L Bold) readonly def
/FamilyName (Nimbus Sans L) readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition 0 def
/UnderlineThickness 0 def
end readonly def
/FontName /NQAYFR+Helvetica-Bold def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox [0 -218 824 741] readonly def
/StrokeWidth 0 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
dup 40 /parenleft put
dup 41 /parenright put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 53 /five put
dup 66 /B put
dup 73 /I put
dup 78 /N put
dup 82 /R put
dup 83 /S put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 104 /h put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 116 /t put
dup 118 /v put
readonly def
currentdict end
currentfile eexec
5AA4F71255501637F1A431BAB555283D093E1B588B45B0281559110D21315C62
BD638C6B34BA54AA75227715D9947EBCD51A104CAEA657499E94138F5645BF68
368BB1B1EC8E4776F067FFF2CE9B89FB7E63A7DB304498C1036D399C47A4CB79
BD517EDB02BEB90195FD7DDAF3E839BCE2DB156D9337DBB2305A465B3E0FFB97
1985C79DC71C47E26F9F0F042B2CDEE97B679358059256FB93D662D43C7ECB5B
1A564DFCECB963478373C69F52172F071E0AA6082A3E10D9E1CE2851CFA210EE
7BD5FCB1AAE15E89D1FB339D587D218B89C18A32F47C7451A80CB1FC07CF5EF6
FB39B30D1F81ADB02AFD41D295F22680AF66E9F4314EA52B3CDE51C3F275E8BD
F449819374352A4CDA4FBE0647CC592F61F10862B0FACBE06D3E5F81E8E2DDE2
27CF0E6606FA733BDA45078A751B77D9CB0D608D8A4013A2EEB0F7A8310CD1E9
21FADF98936D1350D63463D5AB6D8CEE71D4A5793FACC2AD0B48AD529DD848E0
0D624066783B2522C63341B75A5257A7E5A245A0ECE6AC5B2B44D9637EDCDF42
3C9EA8CC6A20D90470EDF2CBF3709CB10A0042170ECAF42267DC5688EB86CAAB
3CACC90E2F10AEF59BABB593A19A50AF32FC478E3FFA14FA01594B913D4FA3AA
5B263938067393B131F2C86BEE7E3E1AC8B38FD1A7004A264AE3EBB4AC8A6A7F
CCE9C38F9402F6FF28AB6E0B9E5912A31BC756E7CFDAAF791F69D209CB17602F
E39A46ED5A1F2B76E99F5D4C91DA20008498E75BE36243BCF3EABE484016357A
571CDBCD8388853122AC8DB93561CBC04064C5B9410FAC9632844605CB25AC3D
4F6FA477952A53A3830BFC01BD8C3738B69E1D27860F0D3E388F1638620C96E4
886A504E2D91E2A9B364E805FA29521D70E9C12006B4E314B29B5FC6767B1DAC
C09521D5DF98D721394EE21272853AADFEC760A1A1EDE13DE90C0B754154A063
8CABCFA0B507609560FE3640317C679F49B86498961D8805758401FD93C6BB7A
90740BC8924FA90CA35CCF09AD836913596506C429E5A253839B293FFB7658CD
A18C20BAB068D635D1E928444C5C1C4868D64E3CD28AA8C9A4D9F46FD8E9C538
58FBDEAF7740908BBBC3178F076F6F54FAD5BD323A19627CDC2D194561F7F0B2
938F9E463E44E6FA1604A030C26EEC346F6D5AEA3987BD064634C9C344BFFDD3
FC509D9D40510A1442A4C1E2780058EBBF3C5ADF605C0F1CFBF7E24153AA7008
39C5F815A25DF8FA43DD64F4D55CA10FDA0C4F4A0F45F50B29ECB32BD039A2C6
2B696E3040EFB2C49659EB3CD2B8734F92DE77ED6339B40D77C3B77DE38D9396
4AC5B7FB807F62F46B9765C1CE63FC72157770774753D6C749A3588EAB826228
F539B917DE02DA243DA747735492C9779ED84330D2D7302C63F1F04FFBE204FA
F47665B8A1D9B574514D805035CE5A7E4AA6FAB0D3ABF68916BBB738AB721041
D171AA2AA8367FFF8334019A1D66D3BD21632B7A20C390975C472289C8DF3AA1
26E3ADE0D5CB6AC4C3B022E55BFA3EE91E0B74B85F606DBD2AC6AEFCBFA0B84E
EAE4C7BE2B6C9E41CDCBBE0DCD8849E372B4648EC64074D90901F20774927834
0648BE1BD87D905231B324FE7B4378C49323349CA670007558C5882F0C44A957
FA10CE814957A5521DC55392A84B9142676E886436E62CC27DE4343B6FF0EE7C
64B98F912D0D958C314D5F436E340F309DA5DE4B7A24865E864AF935931DF409
C467A49784400398ED0B117ED129C1EE31E4984D8C11C6E36A29C0312ADDF9BB
7EC0341F4B4FD40588AB394BB03B3FB698E5472017E3AB0A85BDB27A4F6EC501
8CE5EE0440C973206C3F06250B518546C24A7F0F4F298C7C239CF02952E829E7
DD792213D5468F9F887D80B88A120C2FCE01A8A55FCAF986F413C0E4DD1ECE62
79F02ED3B3B1E5320940DB26952AA62D5DF2EE41324348A85921603B448FB8BD
056B75683018569A04ADD50E6D134F58251F5646A911CD2BA1DF0B66567BF050
2BD5516BB81AAA346868F7279B4743A547E8A0B95C34CA71FB443BB51EC9242F
69E9A25B07F7064D075EEE85FD4F63252672A2BC4F473BE20A0A478D2C34B92D
20A9510FA0C8DB4B398280528297E3829B34467D3CF045EBDEC704581B9AE603
C574B5506C77FFDFAC00EC13B40C2BA28211C83E0926821ACC3DCAAF912CE89C
21BCFF49306A651E30C16587A50AF89440AA8A72F644D1F7067AAD2D0736F436
4B9E34323FE8DA9A2CC8CF6F0A309359B0FA011DB9B9EEB7466AC245752FE3B9
C3416203678057CFD15ED12E7650670878914FDD5FC390A3CD3AEBE122FBF830
9597664BB39096B6E8F56144B80FC077416F28E643474BEA16215084A54A84BE
DA92CDC7484BEB86D62322C29659686BA8A14CEF4E12A5EF7C96A105C87E3884
FE0577C35238B4EDBE4FDF4602F30697FFD6467688A7313334253DDE5818FA88
A4FF8FE1A3F88E238B1A9892B3B3C326AF73054112D594364D94B1CCA500C14E
12082F86D336D230713ED17E05B391AB20F7CAC72CA8D92230D2543D9FD163BE
DC240C338EBE95A988668CB181D7B4803EF2D7FAD08A95E675328A038EAA0DA8
9730A9F6E49A315639B4806E47C65C64B687B5E286413951D5F71DBE8EF502EF
736DFF0D567F95BBFBAE6212D891D52DA9F56D0F28C1A68D3A3151CFAFC37392
D1C2B25AABDE597E669EE36EF24DDB644F01F82CAD05DEF0E194E3243AE579CF
15FB3981CFB95887B9D97C56B9B6FAB20F2E911B684C3BC0C2EAC9407B26B5B8
BD9EA8AA0FA1710C676FA045423E7F410A422BD1228CB58C03A316729EBB33E0
DC3C6AAC3E01F02129EBF229CCDDDD03A2E24AC90EB584FA9CB81F90D349A9EC
5D763247298AFF5057FCE9F19C3B2ABF598E1B01066BEAB388EECABEE826115F
08F0247610303F3954E05C31B23EFFD8F2C752E5B50048E829E61306F930EF72
2E0C1CFF579F6DB66C6048B50948D77566DA8D25ACDCBBAC18CE9B66059AD248
9CF55493C9FC1E52344819825EBC778AB7E437B64E95465303642EDC7F83E686
A7992D3E5AF44B8673CBF95C040FEFF9AA25E3954CF070B673EAD2845B039BFC
9E125C2D7FD8482519A76A8FA5BF0D1114EB38A89F7BDE07BC6B16EE72622E0C
FCC817180769FD36B816989E31D89821EF92C25D540538CD8B9C3DC2FCA4C8BB
0955DCB74902C455629575022C7AEBC9F2EC6D2D7EDE74B95F9130AEC8039142
0FC15A1B8C7DF049380F409EA49D9580D831633804CEB22D27ACF698D0156E7F
3E1CE4BE4DE4E2582E4A09EDAF12868CCCE67FF2BC2E4F4CFF45B33A9E36295A
03467F226405CBF54738BE2CBB95871E963EC2FE831A67D874097E4C3AC046C3
CADE77E746F9623F19D525AEFD33C93CEEB5C9890A5F72E5771F89A94F0A0B06
559D68E056A2246C639881813A3CD36E9DF6E2FDE4AE2BEF9148C125B86E6B05
D0584D7D5E4A64B0771648EC74ADAC94688A5E65AA7622BAE56CE0B89D8C0994
A00E69ECAAC51CD328A29E8F3DB43D2675794A44A8106535ED7C8F1A49CCAD8A
9B662EA6331ECDB6D3641F33D50D21E4E44AABAAAA1CB9C6A3B5F657D990F55F
C2BA914FD5386615803F72BA2E07A2E9954051AAC62928AA1CF117A647F1F58A
5B1D6E1C05C473CF4458A161C8E0F2EFBCF43ADABC0EA47CDF34F522CE86A381
542F08F49FE0BA0D6927CB0BB5310C11BE96176D81988DCEF1F5F2845354694B
3C33F6C08E841BCFC16E5A312463084AF198B010C7929F3EC39E26FB5AABD7AD
BF264F39FC0B0B16CA883DB4C02BBF715A0D40ACAE19433A72529D33C735A6E9
B834E46B9F5FC5DF201C4505C49D33FD34F2F3A948D0A50AE647C9B353F2AA65
EF24E13F44B3C8E62F2F228A2F740A19200DF14CFBF25E63D36163E913A201B9
30A62AFF903D9C4A2A0AF6E50602215201F598906C87BCFE8C9E9A4C737D731D
B6F3083064BFC0EB6CAFE11761299015E9C753363BBBC9842B6B2DD6FDFC952D
A6461CBB0D60347B26B89CBD7A116C6CFC7984658EDD31CB02C1DF5EFF2D4508
12799C6A59CEEB54D441AEB756DBB99E65ECEC2733A79C39DDD8C30EFE36AB64
556387EED53BF5EDE0079B1C5AB816F8DD7E64F24DA110907828E66E0BFAC646
8DE1EBC5974E2E5D7BF600395442A69BCBF8D74FFB1D39EDBC459441AFDDC1B0
1D8E4CB7A6CB2A8D6AFF461970B41DEEF021816E8BDB383C5406A880E5667982
CF9CC275DCF4633A7815A62E2D1C9673FFDFD925DF25C756C8C2A9CC2BE22DA8
830C561576EA1DDE062D4715F2F7D1C68B0D7F0F344F337D9E5A546F6AFE62C5
52FDF9730631019107D28AB8D75BEACB2C6E6090B386F8389C7BDE0784BCA4A5
4836D0AD26A998FC50D40B0CEAF39D5B1C174E100FB84D76EFA60A42
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndResource
/F8_0 /NQAYFR+Helvetica-Bold 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /grave/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/bullet
  /Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
  /circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet
  /bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
  /tilde/trademark/scaron/guilsinglright/oe/bullet/zcaron/Ydieresis
  /space/exclamdown/cent/sterling/currency/yen/brokenbar/section
  /dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
  /degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
  /cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
  /Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
  /Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
  /Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
  /Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
  /agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
  /egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
  /eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
  /oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]
pdfMakeFont
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 432 347 re
W
q
q
[0.1 0 0 0.1 0 0] cm
q
0 0 4320 3465 re
W
/DeviceGray {} cs
[1] sc
0 0 4320 3465 re
f
Q
/DeviceGray {} cs
[1] sc
0 0 4320 3465 re
f
562.5 382.5 3345 2820 re
f
5.0025 w
2 J
1 j
/DeviceGray {} CS
[0.1489] SC
562.5 382.5 m
3907.5 382.5 l
S
562.5 3202.5 m
3907.5 3202.5 l
S
562.5 382.5 m
562.5 415.949 l
S
1398.75 382.5 m
1398.75 415.949 l
S
2235 382.5 m
2235 415.949 l
S
3071.25 382.5 m
3071.25 415.949 l
S
3907.5 382.5 m
3907.5 415.949 l
S
562.5 3202.5 m
562.5 3169.05 l
S
1398.75 3202.5 m
1398.75 3169.05 l
S
2235 3202.5 m
2235 3169.05 l
S
3071.25 3202.5 m
3071.25 3169.05 l
S
3907.5 3202.5 m
3907.5 3169.05 l
S
/DeviceGray {} cs
[0.1489] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 52.875 22.6] Tm
0 0 Td
/F8_0 12 Tf
(0)
[6.672
0] Tj
-6412.75 TJm
(5)
[6.672
0] Tj
-6131.5 TJm
(10)
[6.672
0
6.672
0] Tj
-5856.75 TJm
(15)
[6.672
0
6.672
0] Tj
-5856.75 TJm
(20)
[6.672
0
6.672
0] Tj
136.875 -16 Td
/F8_0 13.2 Tf
(Iteration)
[3.6696
0
4.3956
0
7.3392
0
5.1348
0
7.3392
0
4.3956
0
3.6696
0
8.0652
0
8.0652
0] Tj
Q
562.5 382.5 m
562.5 3202.5 l
S
3907.5 382.5 m
3907.5 3202.5 l
S
562.5 852.504 m
595.949 852.504 l
S
562.5 1440 m
595.949 1440 l
S
562.5 2027.5 m
595.949 2027.5 l
S
562.5 2615 m
595.949 2615 l
S
562.5 3202.5 m
595.949 3202.5 l
S
3907.5 852.504 m
3874.05 852.504 l
S
3907.5 1440 m
3874.05 1440 l
S
3907.5 2027.5 m
3874.05 2027.5 l
S
3907.5 2615 m
3874.05 2615 l
S
3907.5 3202.5 m
3874.05 3202.5 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 45.1 80.75] Tm
0 0 Td
/F8_0 12 Tf
(5)
[6.672
0] Tj
-6.75 58.75 Td
(10)
[6.672
0
6.672
0] Tj
-6.75 117.5 Td
(15)
[6.672
0
6.672
0] Tj
-6.75 176.25 Td
(20)
[6.672
0
6.672
0] Tj
-6.75 235 Td
(25)
[6.672
0
6.672
0] Tj
[0 1 -1 0 33.1 153] Tm
0 0 Td
/F8_0 13.2 Tf
(SNR\(dB\))
[8.8044
0
9.5304
0
9.5304
0
4.3956
0
8.0652
0
9.5304
0
4.3956
0] Tj
Q
20.0025 w
0 J
/DeviceRGB {} CS
[0 0 1] SC
729.75 429.359 m
897 786.074 l
1064.25 988.461 l
1231.5 1290.43 l
1398.75 1558.36 l
1566 1807.55 l
1733.25 2042.96 l
1900.5 2243.09 l
2067.75 2433.31 l
2235 2571.41 l
2402.25 2711.11 l
2569.5 2781.98 l
2736.75 2864.5 l
2904 2875.22 l
3071.25 2917.42 l
3238.5 2899.68 l
3405.75 2925.89 l
3573 2898.58 l
3740.25 2918.89 l
3907.5 2888.57 l
S
/DeviceRGB {} CS
[1 0 0] SC
782.176 382.164 m
897 493.957 l
1064.25 592.672 l
1231.5 732.172 l
1398.75 810.211 l
1566 948.008 l
1733.25 1019.05 l
1900.5 1130.24 l
2067.75 1190.22 l
2235 1271.85 l
2402.25 1312.58 l
2569.5 1362.99 l
2736.75 1384.08 l
2904 1412.97 l
3071.25 1420.43 l
3238.5 1436.98 l
3405.75 1436.69 l
3573 1447.32 l
3740.25 1443.28 l
3907.5 1451.49 l
S
30 w
/DeviceGray {} CS
[0] SC
2392.5 1507.5 m
2441.88 1337.42 l
S
0 j
/DeviceRGB {} CS
[0 1 0] SC
1623.75 1487.5 1577.5 175.008 re
S
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 164.375 153] Tm
0 0 Td
/F8_0 12 Tf
(the conventional method)
[3.996
0
7.332
0
6.672
0
3.336
0
6.672
0
7.332
0
7.332
0
6.672
0
6.672
0
7.332
0
3.996
0
3.336
0
7.332
0
7.332
0
6.672
0
3.336
0
3.336
0
10.668
0
6.672
0
3.996
0
7.332
0
7.332
0
7.332
0] Tj
Q
5.0025 w
1 j
/DeviceGray {} CS
[0] SC
2468.13 1381.49 m
2460 1275 l
2441.88 1337.42 l
2468.13 1381.49 l
S
2460 1275 m
2396.11 1360.58 l
2441.88 1337.42 l
2460 1275 l
S
2468.13 1381.49 m
2460 1275 l
2441.88 1337.42 l
f
2460 1275 m
2396.11 1360.58 l
2441.88 1337.42 l
f
30 w
1890 2610 m
1973.43 2443.14 l
S
0 j
/DeviceRGB {} CS
[0 1 0] SC
1256.25 2590 1307.5 175.008 re
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 127.625 263.25] Tm
0 0 Td
/F8_0 12 Tf
(the improved method)
[3.996
0
7.332
0
6.672
0
3.336
0
3.336
0
10.668
0
7.332
0
4.668
0
7.332
0
6.672
0
6.672
0
7.332
0
3.336
0
10.668
0
6.672
0
3.996
0
7.332
0
7.332
0
7.332
0] Tj
Q
5.0025 w
1 j
/DeviceGray {} CS
[0] SC
1991.32 2491.21 m
2002.5 2385 l
1973.43 2443.14 l
1991.32 2491.21 l
S
2002.5 2385 m
1924.24 2457.68 l
1973.43 2443.14 l
2002.5 2385 l
S
1991.32 2491.21 m
2002.5 2385 l
1973.43 2443.14 l
f
2002.5 2385 m
1924.24 2457.68 l
1973.43 2443.14 l
f
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font NQAYFR+Helvetica-Bold
%%EOF
